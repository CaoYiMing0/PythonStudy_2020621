# 字符串格式化可以使用操作符百分号（%）实现
print('hello,%s' % 'world')  # hello,world
print('小智今年%s岁了' % 10)  # 小智今年10岁了
"""
由上面的输入内容可知，%左边放置了一个待格式化的字符串，右边放置的是
希望格式化的值。格式化的值可以是一个字符串或数字。
格式化字符串的%s部分称为转换说明符，标记了需要放置转换值的位置，通用术语为占位符。
这里提供了字符串格式化的方法，但若需要转化为其他格式，该怎么办呢？请看下面所示的格式化符号
%c      格式化字符及其ASCII码
%s      格式化字符串
%d      格式化整数
%u      格式化无符号整型
%o      格式化无符号八进制数
%x      格式化无符号十六进制数
%X      格式化无符号十六进制数（大写）
%f      格式化浮点数字，可指定精度值
%e      用科学计数法格式化浮点数
%E      作用同%e，用科学计数法格式化浮点数
%g      %f和%e的简写
%G      %f和%E的简写
%p      用十六进制数格式化变量的地址
"""

a = '小智今年%s岁了' % 10
print(a)  # 小智今年10岁了
print('小智今年%d岁了' % 10)  # 小智今年10岁了
print("-------------------------------------")

print('圆周率PI的值为：%f' % 3.14)  # 圆周率PI的值为：3.140000
# %f可指定精度值，在Python中，使用%f时，若不指定精度，则默认输出6位小数
print('圆周率PI的值为：%.2f' % 3.14)
# 不是所有符号都常用，比较常用的有%s、%d、%f三个，%e和%E在科学计算中使用的比较多
print("---------------------------------------")

# 假如我们要输出类似1.23%这样的结果，直接使用加号加一个百分号可以吗？尝试如下：
print('小智的识别能力比去年提高了：%.2f' % 1.23 + '%')  # 小智的识别能力比去年提高了：1.23%
# 可以，代码不太好看，有没有更好的方法呢？
print('小智的识别能力比去年提高了：%.2f%%' % 1.23)  # 小智的识别能力比去年提高了：1.23%
"""
上面f字符后面使用了两个%，结果只输出了一个？
在Python中，字符串中的百分号是转换说明符，如果要输出%，就需要格式化字符%，从而需要使用%%。
"""
print('输出百分号%s' % '%')
print("-------------------------------")

print('输出\'')  # 输出'
print('输出\%')  # 输出\%
# 为什么不同？转义字符的出现就是为了解决与print('')中引号的冲突
